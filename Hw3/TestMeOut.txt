
***********************
Starting Test #0: isWin(): Vertical Win (far right column)
*******
*******
******P
******P
******P
******P
Passed test #0

***********************
Starting Test #1: isWin(): Vertical Win (3rd column from left)
*******
**P****
**P****
**P****
**P****
*******
Passed test #1

***********************
Starting Test #2: Diagonal Down-Right Win
**P****
***P***
****P**
*****P*
*******
*******
Passed test #2

***********************
Starting Test #3: Diagonal UP-Right NOT-Win (wrong player)
*******
*******
*****Q*
****Q**
***Q***
**Q****
Passed test #3

***********************
Starting Test #4: takeTurn() Bad Move Test  (nearly full board)
P******
QPQPQP*
PQQQPQ*
PQQQPQ*
PQPQPQ*
QPQPQP*
Please Enter a column number to put a piece into.P******
QPQPQP*
PQQQPQ*
PQQQPQ*
PQPQPQ*
QPQPQP*
Passed test #4

***********************
Starting Test #5: takeTurn() Good Move Test (nearly full board)
*QPQPQ*
QPQPQP*
PQQQPQ*
PQQQPQ*
PQPQPQ*
QPQPQP*
Please Enter a column number to put a piece into.PQPQPQ*
QPQPQP*
PQQQPQ*
PQQQPQ*
PQPQPQ*
QPQPQP*
Passed test #5

***********************
Starting Test #6: isTie() Simple Is-A-Tie Test (full board)
PPQQPQQ
QQPPQQP
QPQPPPQ
PQQPQQP
PQQQPPP
QPPPQPQ
Passed test #6

***********************
Starting Test #7: isTie() Complex Not-A-Tie Test (nearly full board)
*QPQPQQ
PPQPQPP
PQQQPQQ
PQQQPQP
QQPQPQQ
QPQPQPP
Passed test #7

***********************
Starting Test #8: Next Player Test  - inc to 2nd player of 2 players, using nextPlayer(), getCurrentPlayerToken() 
*******
*******
*******
*******
*******
*******
Passed test #8

***********************
Starting Test #9: Next Player Test  - inc to 1st player of 2 players, using nextPlayer(), getCurrentPlayerToken() 
*******
*******
*******
*******
*******
*******
Passed test #9

***********************
Starting Test #10: Next Player Test  - inc to 1st player of 3 players, , using nextPlayer(), getCurrentPlayerToken() 
*******
*******
*******
*******
*******
*******
Passed test #10

***********************
Starting Test #11: Get Current Player Token Test  - see if the current player token is the 1st player, using getCurrentPlayerToken() 
*******
*******
*******
*******
*******
*******
Passed test #11

***********************
Starting Test #12: Get Current Player Token Test  - testing 4th argument of constructor for default starting player, using getCurrentPlayerToken() 
*******
*******
*******
*******
*******
*******
Passed test #12

***********************
Starting Test #13: isWin(): Diagonal UP-Right NOT-Win (3 players correct player, but not a win)
QWQWQW*
WPWPWPQ
PQPQPQP
QWQWQWW
WPWPWPQ
PQPQPQP
Passed test #13

***********************
Starting Test #14: isTie(): 3 player tie full board 
QWQWQWW
WPWPWPQ
PQPQPQP
QWQWQWW
WPWPWPQ
PQPQPQP
Passed test #14

***********************
Starting Test #15: isWin(): Diagonal Up-Right Win
*******
****P**
***P***
**P****
*P*****
*******
Passed test #15

***********************
Starting Test #16: isWin(): Diagonal Down-Right Win at lower right corner
*******
*******
***P***
****P**
*****P*
******P
Passed test #16

***********************
Starting Test #17: isWin(): Diagonal Down-Right Win at upper left corner
P******
*P*****
**P****
***P***
*******
*******
Passed test #17

***********************
Starting Test #18: isWin(): Diagonal Up-Right Win at lower left corner
*******
*******
***P***
**P****
*P*****
P******
Passed test #18

***********************
Starting Test #19: isWin(): Diagonal Up-Right Win at upper right corner
******P
*****P*
****P**
***P***
*******
*******
Passed test #19

***********************
Starting Test #20: isWin(): Diagonal Down-Right NOT WIN at lower right corner
*******
*******
*******
****P**
*****P*
******P
Passed test #20

***********************
Starting Test #21: isWin(): Diagonal Down-Right NOT WIN at upper left corner
P******
*P*****
**P****
*******
****P**
*******
Passed test #21

***********************
Starting Test #22: isWin(): Diagonal Up-Right NOT WIN at lower left corner
*******
****P**
*******
**P****
*P*****
P******
Passed test #22

***********************
Starting Test #23: isWin(): Diagonal Up-Right NOT WIN at upper right corner
******P
*****P*
****P**
*******
**P****
*******
Passed test #23

***********************
Starting Test #24: isWin(): Horizontal NOT WIN bottom row
*******
*******
*******
*******
*******
P*P*P*P
Passed test #24

***********************
Starting Test #25: isWin(): Horizontal NOT WIN top row
PPP*P**
*******
*******
*******
*******
*******
Passed test #25

***********************
Starting Test #26: isWin(): Vertical NOT WIN far left column
P******
P******
P******
*******
P******
*******
Passed test #26

***********************
Starting Test #27: isWin(): Vertical NOT WIN far right column
*******
******P
******P
*******
******P
******P
Passed test #27

***********************
Starting Test #28: isWin(): Vertical WIN far left column
P******
P******
P******
*******
P******
*******
Passed test #28

***********************
Starting Test #29: isWin(): Vertical NOT WIN far right column
*******
******P
******P
*******
******P
******P
Passed test #29

***********************
Starting Bonus Test #0: BONUS: Complex Is-A-Tie Test (nearly full board)
PPQQPQ*
QQPPQQP
QPQPPPQ
PQQPQQP
PQQQPPP
QPPPQPQ
Passed bonus test #0

***********************
Starting Bonus Test #1: BONUS: Complex Is-A-Tie Test (nearly full board)
PPQQPQ*
QQPPQQ*
QPQPPPQ
PQQPQQP
PQQQPPP
QPPPQPQ
Passed bonus test #1

***********************
Starting Bonus Test #2: BONUS: Complex Is-A-Tie Test (nearly full board)
PPQQPQ*
QQPPQQ*
QPQPPPQ
PQQPQQP
PQQQPPP
QPPPQPQ
Passed bonus test #2

***********************
Starting Bonus Test #3: BONUS: Complex NOT-A-Tie Test (nearly full board)
PPQQPQ*
QQPPQQ*
QPQPPP*
P*QPQQP
PQQQPPP
QPPPQPQ
Passed bonus test #3

***********************
Starting Bonus Test #4: BONUS: Complex NOT-A-Tie Test (nearly full board)
PPQQPQ*
QQPPQQ*
QPQPPP*
P*QPQQ*
PQQQPPP
QPPPQPQ
Passed bonus test #4
